<?php

/**
 * This is the model base class for the table "billing_infrormations".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BillingInformations".
 *
 * Columns in table "billing_infrormations" available as properties of the model,
 * followed by relations of table "billing_infrormations" available as properties of the model.
 *
 * @property integer $bill_id
 * @property integer $appointment_id
 * @property string $payer_name
 * @property integer $payer_zipcode
 * @property string $payer_city
 * @property string $payer_street
 * @property string $payer_housenum
 * @property string $payer_phone
 * @property integer $have_to_add_bill
 *
 * @property ExitAppointment $appointment
 */
abstract class BaseBillingInformations extends ExitAppointment {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'billing_infrormations';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BillingInformations|BillingInformations', $n);
	}

	public static function representingColumn() {
		return 'payer_name';
	}

	public function rules() {
		return array(
			array('appointment_id, payer_name, payer_zipcode, payer_city, payer_street, payer_housenum, payer_phone', 'required'),
			array('appointment_id, payer_zipcode, have_to_add_bill', 'numerical', 'integerOnly'=>true),
			array('payer_name', 'length', 'max'=>255),
			array('payer_city, payer_street', 'length', 'max'=>100),
			array('payer_housenum', 'length', 'max'=>25),
			array('payer_phone', 'length', 'max'=>45),
			array('have_to_add_bill', 'default', 'setOnEmpty' => true, 'value' => null),
			array('bill_id, appointment_id, payer_name, payer_zipcode, payer_city, payer_street, payer_housenum, payer_phone, have_to_add_bill', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'appointment' => array(self::BELONGS_TO, 'ExitAppointment', 'appointment_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'bill_id' => Yii::t('app', 'Bill'),
			'appointment_id' => null,
			'payer_name' => Yii::t('app', 'Payer Name'),
			'payer_zipcode' => Yii::t('app', 'Payer Zipcode'),
			'payer_city' => Yii::t('app', 'Payer City'),
			'payer_street' => Yii::t('app', 'Payer Street'),
			'payer_housenum' => Yii::t('app', 'Payer Housenum'),
			'payer_phone' => Yii::t('app', 'Payer Phone'),
			'have_to_add_bill' => Yii::t('app', 'Have To Add Bill'),
			'appointment' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('bill_id', $this->bill_id);
		$criteria->compare('appointment_id', $this->appointment_id);
		$criteria->compare('payer_name', $this->payer_name, true);
		$criteria->compare('payer_zipcode', $this->payer_zipcode);
		$criteria->compare('payer_city', $this->payer_city, true);
		$criteria->compare('payer_street', $this->payer_street, true);
		$criteria->compare('payer_housenum', $this->payer_housenum, true);
		$criteria->compare('payer_phone', $this->payer_phone, true);
		$criteria->compare('have_to_add_bill', $this->have_to_add_bill);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
<?php

/**
 * This is the model base class for the table "exit_appointment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ExitAppointment".
 *
 * Columns in table "exit_appointment" available as properties of the model,
 * followed by relations of table "exit_appointment" available as properties of the model.
 *
 * @property integer $appointment_id
 * @property string $appointment_code
 * @property integer $appointment_status
 * @property string $appointment_modified
 * @property string $appointment_from_date
 * @property string $appointment_to_date
 * @property integer $appointment_booker_id
 * @property integer $appointment_room_id
 *
 * @property BillingInfrormations[] $billingInfrormations
 * @property ExitAppointmentStatus $appointmentStatus
 * @property TblUsers $appointmentBooker
 * @property Room $appointmentRoom
 */
abstract class BaseExitAppointment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'exit_appointment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ExitAppointment|ExitAppointments', $n);
	}

	public static function representingColumn() {
		return 'appointment_code';
	}

	public function rules() {
		return array(
			array('appointment_code, appointment_status, appointment_modified, appointment_from_date', 'required'),
			array('appointment_status, appointment_booker_id, appointment_room_id', 'numerical', 'integerOnly'=>true),
			array('appointment_code', 'length', 'max'=>45),
			array('appointment_to_date', 'safe'),
			array('appointment_to_date, appointment_booker_id, appointment_room_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('appointment_id, appointment_code, appointment_status, appointment_modified, appointment_from_date, appointment_to_date, appointment_booker_id, appointment_room_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'billingInformations' => array(self::HAS_MANY, 'BillingInformations', 'appointment_id'),
			'appointmentStatus' => array(self::BELONGS_TO, 'AppointmentStatus', 'appointment_status'),
			'appointmentBooker' => array(self::BELONGS_TO, 'User', 'appointment_booker_id'),
			'appointmentRoom' => array(self::BELONGS_TO, 'Room', 'appointment_room_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'appointment_id' => Yii::t('app', 'Appointment'),
			'appointment_code' => Yii::t('app', 'Appointment Code'),
			'appointment_status' => null,
			'appointment_modified' => Yii::t('app', 'Appointment Modified'),
			'appointment_from_date' => Yii::t('app', 'Appointment From Date'),
			'appointment_to_date' => Yii::t('app', 'Appointment To Date'),
			'appointment_booker_id' => null,
			'appointment_room_id' => null,
			'billingInfrormations' => null,
			'appointmentStatus' => null,
			'appointmentBooker' => null,
			'appointmentRoom' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('appointment_id', $this->appointment_id);
		$criteria->compare('appointment_code', $this->appointment_code, true);
		$criteria->compare('appointment_status', $this->appointment_status);
		$criteria->compare('appointment_modified', $this->appointment_modified, true);
		$criteria->compare('appointment_from_date', $this->appointment_from_date, true);
		$criteria->compare('appointment_to_date', $this->appointment_to_date, true);
		$criteria->compare('appointment_booker_id', $this->appointment_booker_id);
		$criteria->compare('appointment_room_id', $this->appointment_room_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}